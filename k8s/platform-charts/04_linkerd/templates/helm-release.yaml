apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: linkerd
  namespace: sys-linkerd
spec:
  interval: 1h
  url: https://helm.linkerd.io/edge
---
# Create a HelmRelease for linkerd‑crds
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: linkerd-crds
  namespace: sys-linkerd
spec:
  interval: 10s
  maxHistory: 1
  install:
    remediation:
      retries: 10
  upgrade:
    remediation:
      retries: 10
  driftDetection:
    mode: enabled
  releaseName: linkerd-crds
  chart:
    spec:
      chart: linkerd-crds
      version: {{ .Values.versions.crdChart }}
      sourceRef:
        kind: HelmRepository
        name: linkerd
        namespace: sys-linkerd
---
# Create a HelmRelease for linkerd‑control‑plane that pulls the trust anchor from the secret
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: linkerd-control-plane
  namespace: sys-linkerd
spec:
  interval: 10s
  timeout: 10m # -- Increase the install/upgrade timeout to 10 minutes (images are rather large and can take a while to pull)
  maxHistory: 1
  install:
    remediation:
      retries: 10
  upgrade:
    remediation:
      retries: 10
  driftDetection:
    mode: enabled
  releaseName: linkerd-control-plane
  chart:
    spec:
      chart: linkerd-control-plane
      version: {{ .Values.versions.controlPlaneChart }}
      sourceRef:
        kind: HelmRepository
        name: linkerd
        namespace: sys-linkerd
  valuesFrom:
    - kind: Secret
      name: linkerd-trust-anchor
      valuesKey: tls.crt
      targetPath: identityTrustAnchorsPEM
  values:
    linkerdVersion: {{ .Values.versions.linkerd }}
    controllerLogLevel: info
    controllerLogFormat: plain
    revisionHistoryLimit: 1

    # for HA
    controllerReplicas: 1
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    controller:
      podDisruptionBudget:
        maxUnavailable: 1

    egress: # -- The namespace that is used to store egress configuration that affects all client workloads in the cluster
      globalEgressNetworkNamespace: sys-linkerd

    identity:
      externalCA: false
      issuer:
        scheme: kubernetes.io/tls
        issuanceLifetime: 24h0m0s

    policyController:
      logLevel: info

    proxy:
      enableShutdownEndpoint: true # -- Enables the proxy's /shutdown admin endpoint (useful to gracefully terminate pods for jobs/cronjobs - i.e. ping the proxy-shutdown after the job is done)
      logLevel: warn,linkerd=info,trust_dns=error
      logFormat: plain # -- Log format (`plain` or `json`) for the proxy

    proxyInit:
      logLevel: info
      logFormat: plain # -- Log format (`plain` or `json`) for the proxy-init

    networkValidator:
      logLevel: debug
      logFormat: plain
