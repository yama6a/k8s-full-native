# Create a selfâ€‘signed Issuer that issues the CA certificate for the trust anchor
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned
  namespace: sys-linkerd
spec:
  selfSigned: {}
---
# Create a trust anchor (CA) Certificate that stores its output in secret linkerd-trust-anchor
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: linkerd-trust-anchor
  namespace: sys-linkerd
spec:
  secretName: linkerd-trust-anchor
  commonName: root.linkerd.cluster.local
  isCA: true
  duration: 876000h # 100 years (should never expire - rotation will require downtime or a lot of pain - https://linkerd.io/2-edge/tasks/manually-rotating-control-plane-tls-credentials/#rotating-the-trust-anchor)
  issuerRef:
    name: selfsigned
    kind: Issuer
---
# CA Issuer referencing the trust anchor secret (issues certificates signed by the CA trust anchor cert)
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: linkerd-ca-issuer
  namespace: sys-linkerd
spec:
  ca:
    secretName: linkerd-trust-anchor
---
# Identity Issuer Certificate using the CA Issuer (used by linkerd to create and sign mTLS certs, e.g. for the sidecars)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: linkerd-identity-issuer
  namespace: sys-linkerd
spec:
  secretName: linkerd-identity-issuer
  duration: 48h
  renewBefore: 25h
  issuerRef:
    name: linkerd-ca-issuer
    kind: Issuer
  commonName: identity.linkerd.cluster.local
  dnsNames:
    - identity.linkerd.cluster.local
  isCA: true
  privateKey:
    algorithm: ECDSA
  usages:
    - cert sign
    - crl sign
    - server auth
    - client auth
