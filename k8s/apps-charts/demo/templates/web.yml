kind: ServiceAccount
apiVersion: v1
metadata:
  name: web
  namespace: app-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: app-demo
  labels:
    app.kubernetes.io/name: web
    app.kubernetes.io/part-of: emojivoto
    app.kubernetes.io/version: v11
  annotations:
    config.linkerd.io/access-log: "apache"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-svc
      version: v11
  template:
    metadata:
      labels:
        app: web-svc
        version: v11
    spec:
      serviceAccountName: web
      containers:
      - env:
        - name: WEB_PORT
          value: "8080"
        - name: EMOJISVC_HOST
          value: emoji-svc.app-demo:8080
        - name: VOTINGSVC_HOST
          value: voting-svc.app-demo:8080
        - name: INDEX_BUNDLE
          value: dist/index_bundle.js
        image: docker.l5d.io/buoyantio/emojivoto-web:v11
        name: web-svc
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: 100m
---
apiVersion: v1
kind: Service
metadata:
  name: web-svc
  namespace: app-demo
spec:
  type: ClusterIP
  selector:
    app: web-svc
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: app-demo
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/service-upstream: "true" # needed to funnel ingress-traffic via mTLS'ed linkerd
spec:
  rules:
    - host: web.app-demo.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-svc
                port:
                  number: 80
