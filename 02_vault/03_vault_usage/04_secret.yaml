apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth # allows the serviceaccount "my-sa" to authenticate with Vault
metadata:
  name: vault-auth
  namespace: wl-my-app-ns
spec:
  method: kubernetes
  mount: "kubernetes"
  vaultConnectionRef: "sys-vault/default"
  kubernetes:
    role: "default"
    serviceAccount: "my-sa"
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: my-sa-secret
  namespace: wl-my-app-ns
spec:
  mount: "allow_single_serviceaccount" # Can only be accessed by the serviceaccount by which it's prefixed in the "path"
  type: "kv-v2"
  path: /my-sa/my-sa-secret
  vaultAuthRef: "vault-auth"  # Reference to the VaultAuth object
  destination:
    name: "my-sa-secret"   # Kubernetes Secret name
    create: true
    overwrite: false
    type: "Opaque"
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: my-ns-secret
  namespace: wl-my-app-ns
spec:
  mount: "allow_any_sa_in_single_namespace" # Can only be accessed by a serviceaccount in the namespace by which it's prefixed in the "path"
  type: "kv-v2"
  path: wl-my-app-ns/my-ns-secret
  vaultAuthRef: "vault-auth"  # Reference to the VaultAuth object
  destination:
    name: "my-ns-secret"   # Kubernetes Secret name
    create: true
    overwrite: false
    type: "Opaque"
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: my-shared-secret
  namespace: wl-my-app-ns
spec:
  mount: "allow_any_sa" # Can be accessed by any serviceaccount
  type: "kv-v2"
  path: my-shared-secret
  vaultAuthRef: "vault-auth"  # Reference to the VaultAuth object
  destination:
    name: "my-shared-secret"   # Kubernetes Secret name
    create: true
    overwrite: false
    type: "Opaque"
